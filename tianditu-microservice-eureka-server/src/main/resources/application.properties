server.port=2001

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
spring.application.name=tianditu-service-eureka-server

# \u5173\u95ED\u5B89\u5168\u8BBF\u95EE
management.security.enabled=false

#use ipAddress to identify unique eureka instance
eureka.instance.ipAddress=${spring.cloud.client.ip-address}
eureka.instance.preferIpAddress=true
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}

#open self protect
eureka.server.enable-self-preservation=true
#clean offline services interval
eureka.server.eviction-interval-timer-in-ms=3000

# Make sure eureka server can detect whether this app is up or down. likes heartbeat.
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10

#eureka server flush readWriteCacheMap to readCacheMap time\uFF0Cdefault 30000ms
eureka.server.responseCacheUpdateInvervalMs=3000
#eureka server readWriteCacheMap timeout seconds\uFF0Cdefault 180s
eureka.server.responseCacheAutoExpirationInSeconds=180